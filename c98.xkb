// vim: ft=xkb
xkb_keymap {
	xkb_keycodes "k" { include "evdev(evdev)" };
	xkb_geometry "g" { shape "" {{[0,0]}}; };

	xkb_types "t" {
		type "ONE_LEVEL" { // w(1)
			modifiers = None;
			map[None] = Level1;
			level_name[Level1]= "Any";
		};

		type "ALPHABETIC" { // w(2) && lower(0) && upper(1)
			modifiers = Shift+Lock;
			map[Shift] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
		};

		type "KEYPAD" { // w(2) && (keypad(0) || keypad(1))
			modifiers = Shift+Mod2;
			map[Shift] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
		};

		type "TWO_LEVEL" { // w(2)
			modifiers = Shift;
			map[Shift] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
		};

		type "FOUR_LEVEL_ALPHABETIC" { // w(4) && lower(0) && upper(1) && lower(2) && upper(3)
			modifiers = Shift+Mod5;
			map[None      ] = Level1;
			map[Shift     ] = Level2;
			map[      Mod5] = Level3;
			map[Shift+Mod5] = Level4;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Level3 Base";
			level_name[Level4] = "Shift Level3";
		};

		type "FOUR_LEVEL_SEMIALPHABETIC" { // w(4) && lower(0) && upper(1)
			modifiers = Shift+Mod5;
			map[None      ] = Level1;
			map[Shift     ] = Level2;
			map[      Mod5] = Level3;
			map[Shift+Mod5] = Level4;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Level3 Base";
			level_name[Level4] = "Shift Level3";
		};

		type "FOUR_LEVEL_KEYPAD" { // w(4) && (keypad(0) || keypad(1))
			modifiers = Shift+Mod5;
			map[None      ] = Level1;
			map[Shift     ] = Level2;
			map[      Mod5] = Level3;
			map[Shift+Mod5] = Level4;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Level3 Base";
			level_name[Level4] = "Shift Level3";
		};

		type "FOUR_LEVEL" { // w(4)
			modifiers = Shift+Mod5;
			map[None      ] = Level1;
			map[Shift     ] = Level2;
			map[      Mod5] = Level3;
			map[Shift+Mod5] = Level4;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Level3 Base";
			level_name[Level4] = "Shift Level3";
		};

		type "Xorg" {
			modifiers = Control+Mod1;
			map[Control+Mod1] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Ctrl+Alt";
		};

		type "Print" {
			modifiers = Mod1;
			map[Mod1] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Alt";
		};

		type "PauseBreak" {
			modifiers = Control;
			map[Control] = Level2;
			level_name[Level1] = "Base";
			level_name[Level2] = "Control";
		};
	};

	xkb_compat "c" {
		interpret.repeat=False;
		setMods.clearLocks=True;
		latchMods.clearLocks=True;
		latchMods.latchToLock=True;

		interpret Any+Any          {action=SetMods(modifiers=modMapMods);};
		interpret Alt_L            {action=SetMods(modifiers=Mod1);};
		interpret ISO_Level3_Shift {action=SetMods(modifiers=Mod5);};

		interpret.repeat=True;
		interpret XF86_Switch_VT_1  {action=SwitchScreen(Screen=1, !SameServer);};
		interpret XF86_Switch_VT_2  {action=SwitchScreen(Screen=2, !SameServer);};
		interpret XF86_Switch_VT_3  {action=SwitchScreen(Screen=3, !SameServer);};
		interpret XF86_Switch_VT_4  {action=SwitchScreen(Screen=4, !SameServer);};
		interpret XF86_Switch_VT_5  {action=SwitchScreen(Screen=5, !SameServer);};
		interpret XF86_Switch_VT_6  {action=SwitchScreen(Screen=6, !SameServer);};
		interpret XF86_Switch_VT_7  {action=SwitchScreen(Screen=7, !SameServer);};
		interpret XF86_Switch_VT_8  {action=SwitchScreen(Screen=8, !SameServer);};
		interpret XF86_Switch_VT_9  {action=SwitchScreen(Screen=9, !SameServer);};
		interpret XF86_Switch_VT_10 {action=SwitchScreen(Screen=10,!SameServer);};
		interpret XF86_Switch_VT_11 {action=SwitchScreen(Screen=11,!SameServer);};
		interpret XF86_Switch_VT_12 {action=SwitchScreen(Screen=12,!SameServer);};

		interpret XF86LogGrabInfo   {action=Private(type=0x86,data="PrGrbs");};
		interpret XF86LogWindowTree {action=Private(type=0x86,data="PrWins");};
		interpret XF86_Next_VMode   {action=Private(type=0x86,data="+VMode");};
		interpret XF86_Prev_VMode   {action=Private(type=0x86,data="-VMode");};
		interpret XF86_Ungrab       {action=Private(type=0x86,data="Ungrab");};
		interpret XF86_ClearGrab    {action=Private(type=0x86,data="ClsGrb");};
	};

	xkb_symbols "s" {
		name[Group1]="C98 Custom";

		key <MUTE> {[XF86AudioMute]};
		key <VOL+> {[XF86AudioRaiseVolume]};
		key <VOL-> {[XF86AudioLowerVolume]};
		key <FK20> {[XF86AudioMicMute]};
		key <I232> {[XF86MonBrightnessDown]};
		key <I233> {[XF86MonBrightnessUp]};
		key <I235> {[XF86Display]};
		key <I246> {[XF86WLAN]};
		key <FK13> {[XF86Tools]};
		key <I225> {[XF86Search]};
		key <I128> {[XF86LaunchA]};
		key <I152> {[XF86Explorer]};

		key <ESC>  {[Romaji]};
		key <FK01> {type="Xorg", symbols[Group1]=[F1,  XF86_Switch_VT_1 ]};
		key <FK02> {type="Xorg", symbols[Group1]=[F2,  XF86_Switch_VT_2 ]};
		key <FK03> {type="Xorg", symbols[Group1]=[F3,  XF86_Switch_VT_3 ]};
		key <FK04> {type="Xorg", symbols[Group1]=[F4,  XF86_Switch_VT_4 ]};
		key <FK05> {type="Xorg", symbols[Group1]=[F5,  XF86_Switch_VT_5 ]};
		key <FK06> {type="Xorg", symbols[Group1]=[F6,  XF86_Switch_VT_6 ]};
		key <FK07> {type="Xorg", symbols[Group1]=[F7,  XF86_Switch_VT_7 ]};
		key <FK08> {type="Xorg", symbols[Group1]=[F8,  XF86_Switch_VT_8 ]};
		key <FK09> {type="Xorg", symbols[Group1]=[F9,  XF86_Switch_VT_9 ]};
		key <FK10> {type="Xorg", symbols[Group1]=[F10, XF86_Switch_VT_10]};
		key <FK11> {type="Xorg", symbols[Group1]=[F11, XF86_Switch_VT_11]};
		key <FK12> {type="Xorg", symbols[Group1]=[F12, XF86_Switch_VT_12]};
		key <HOME> {[Home]};
		key  <END> {[End]};
		key  <INS> {[Insert]};
		key <DELE> {[Delete]};

		key <TLDE> {[grave,asciitilde]};
		key <AE01> {[1,exclam]};
		key <AE02> {[2,at]};
		key <AE03> {[3,numbersign]};
		key <AE04> {[4,dollar]};
		key <AE05> {[5,percent]};
		key <AE06> {[6,asciicircum]};
		key <AE07> {[7,ampersand]};
		key <AE08> {[8,asterisk]};
		key <AE09> {[9,parenleft]};
		key <AE10> {[0,parenright]};
		key <AE11> {[minus,underscore]};
		key <AE12> {[equal,plus]};
		key <BKSP> {type="Xorg", symbols[Group1]=[BackSpace, BackSpace]}; //TODO C-A-Backspace

		key  <TAB> {[Tab,ISO_Left_Tab]};
		key <AD01> {[q,Q]};
		key <AD02> {[w,W]};
		key <AD03> {[e,E,adiaeresis,Adiaeresis]};
		key <AD04> {[r,R]};
		key <AD05> {[t,T]};
		key <AD06> {[y,Y]};
		key <AD07> {[u,U]};
		key <AD08> {[i,I]};
		key <AD09> {[o,O,odiaeresis,Odiaeresis]};
		key <AD10> {[p,P]};
		key <AD11> {[bracketleft,braceleft]};
		key <AD12> {[bracketright,braceright]};
		key <RTRN> {[Return]};

		key <CAPS> {[Caps_Lock]};
		key <AC01> {[a,A,aring,Aring]};
		key <AC02> {[s,S]};
		key <AC03> {[d,D]};
		key <AC04> {[f,F]};
		key <AC05> {[g,G]};
		key <AC06> {[h,H]};
		key <AC07> {[j,J]};
		key <AC08> {[k,K]};
		key <AC09> {[l,L]};
		key <AC10> {[semicolon,colon]};
		key <AC11> {[apostrophe,quotedbl]};
		key <BKSL> {[backslash,bar]};

		key <LFSH> {[Shift_L]};
		key <LSGT> {[Escape]};
		key <AB01> {[z,Z]};
		key <AB02> {[x,X]};
		key <AB03> {[c,C]};
		key <AB04> {[v,V]};
		key <AB05> {[b,B]};
		key <AB06> {[n,N]};
		key <AB07> {[m,M]};
		key <AB08> {[comma,less]};
		key <AB09> {[period,greater,ellipsis,ellipsis]};
		key <AB10> {[slash,question]};
		key <RTSH> {[Shift_R]};

		key <I151> {[]}; //FN - default XF86WakeUp
		key <LCTL> {[Control_L]};
		key <LWIN> {[Super_L]};
		key <LALT> {[Alt_L]};
		key <SPCE> {[space]};
		key <RALT> {[ISO_Level3_Shift]};
		key <PRSC> {type="Print", symbols[Group1]=[Print,Sys_Req]};
		key <RCTL> {[Control_R]};

		key <PGUP> {[Prior]};
		key   <UP> {[Up]};
		key <PGDN> {[Next]};
		key <LEFT> {[Left]};
		key <DOWN> {[Down]};
		key <RGHT> {[Right]};

		// modifier_map Lock {Caps_Lock};
		modifier_map Shift {Shift_L,Shift_R};
		modifier_map Control {Control_L,Control_R};
		modifier_map Mod1 {Alt_L};
		modifier_map Mod2 {Num_Lock};
		modifier_map Mod4 {Super_L,Super_R};

		key <LVL3> {[ISO_Level3_Shift]};
		key <MDSW> {[Mode_switch]};
		key  <ALT> {[Alt_L]};
		key <META> {[Meta_L]};
		key <SUPR> {[Super_L]};
		key <HYPR> {[Hyper_L]};
		modifier_map Mod5 {<LVL3>,<MDSW>};
		modifier_map Mod1 {<LALT>,<ALT>,<META>};
		modifier_map Mod4 {<SUPR>};
		modifier_map Mod4 {<HYPR>};

		// {{{ Not on my keyboard
		key <SCLK> {[Scroll_Lock]};
		key <PAUS> {type="PauseBreak",symbols[Group1]=[Pause,Break]};
		key <NMLK> {[Num_Lock]};
		key <RWIN> {[Super_R]};
		key <MENU> {[Menu]};
		// {{{ Numpad
		key <KPDV> {type="Xorg", symbols[Group1]=[KP_Divide, XF86_Ungrab]};
		key <KPMU> {type="Xorg", symbols[Group1]=[KP_Multiply, XF86_ClearGrab]};
		key <KPSU> {type="Xorg", symbols[Group1]=[KP_Subtract, XF86_Prev_VMode]};
		key <KPAD> {type="Xorg", symbols[Group1]=[KP_Add, XF86_Next_VMode]};

		key <KP7> {[KP_Home,KP_7]};
		key <KP8> {[KP_Up,KP_8]};
		key <KP9> {[KP_Prior,KP_9]};

		key <KP4> {[KP_Left,KP_4]};
		key <KP5> {[KP_Begin,KP_5]};
		key <KP6> {[KP_Right,KP_6]};

		key <KP1> {[KP_End,KP_1]};
		key <KP2> {[KP_Down,KP_2]};
		key <KP3> {[KP_Next,KP_3]};
		key <KPEN> {[KP_Enter]};
		key <KPEQ> {[KP_Equal]};

		key <KP0> {[KP_Insert,KP_0]};
		key <KPDL> {[KP_Delete,KP_Decimal]};
		key <KPPT> {[KP_Decimal,KP_Decimal]};
		// }}}
		// {{{ Special keys
		key <AGAI> {[Redo]};
		key <COPY> {[XF86Copy]};
		key <CUT>  {[XF86Cut]};
		key <FIND> {[Find]};
		key <FRNT> {[SunFront]};
		key <HELP> {[Help]};
		key <HENK> {[Henkan]};
		key <HIRA> {[Hiragana]};
		key <HJCV> {[Hangul_Hanja]};
		key <HKTG> {[Hiragana_Katakana]};
		key <HNGL> {[Hangul]};
		key <KATA> {[Katakana]};
		key <KIDN> {[XF86KbdBrightnessDown]};
		key <KITG> {[XF86KbdLightOnOff]};
		key <KIUP> {[XF86KbdBrightnessUp]};
		key <LNFD> {[Linefeed]};
		key <MUHE> {[Muhenkan]};
		key <OPEN> {[XF86Open]};
		key <OUTP> {[XF86Display]};
		key <PAST> {[XF86Paste]};
		key <POWR> {[XF86PowerOff]};
		key <PROP> {[SunProps]};
		key <RO>   {[Romaji]};
		key <STOP> {[Cancel]};
		key <UNDO> {[Undo]};

		key <FK14> {[XF86Launch5]};
		key <FK15> {[XF86Launch6]};
		key <FK16> {[XF86Launch7]};
		key <FK17> {[XF86Launch8]};
		key <FK18> {[XF86Launch9]};
		key <FK21> {[XF86TouchpadToggle]};
		key <FK22> {[XF86TouchpadOn]};
		key <FK23> {[XF86TouchpadOff]};

		key <I126> {[plusminus]};
		key <I147> {[XF86MenuKB]};
		key <I148> {[XF86Calculator]};
		key <I150> {[XF86Sleep]};
		key <I153> {[XF86Send]};
		key <I155> {[XF86Xfer]};
		key <I156> {[XF86Launch1]};
		key <I157> {[XF86Launch2]};
		key <I158> {[XF86WWW]};
		key <I159> {[XF86DOS]};
		key <I160> {[XF86ScreenSaver]};
		key <I162> {[XF86RotateWindows]};
		key <I163> {[XF86Mail]};
		key <I164> {[XF86Favorites]};
		key <I165> {[XF86MyComputer]};
		key <I166> {[XF86Back]};
		key <I167> {[XF86Forward]};
		key <I169> {[XF86Eject]};
		key <I170> {[XF86Eject, XF86Eject]};
		key <I171> {[XF86AudioNext]};
		key <I172> {[XF86AudioPlay,XF86AudioPause]};
		key <I173> {[XF86AudioPrev]};
		key <I174> {[XF86AudioStop,XF86Eject]};
		key <I175> {[XF86AudioRecord]};
		key <I176> {[XF86AudioRewind]};
		key <I177> {[XF86Phone]};
		key <I179> {[XF86Tools]};
		key <I180> {[XF86HomePage]};
		key <I181> {[XF86Reload]};
		key <I182> {[XF86Close]};
		key <I185> {[XF86ScrollUp]};
		key <I186> {[XF86ScrollDown]};
		key <I187> {[parenleft]};
		key <I188> {[parenright]};
		key <I189> {[XF86New]};
		key <I190> {[Redo]};
		key <I192> {[XF86LaunchA]};
		key <I193> {[XF86LaunchC]};
		key <I194> {[XF86LaunchD]};
		key <I195> {[XF86LaunchE]};
		key <I196> {[XF86LaunchF]};
		key <I208> {[XF86AudioPlay]};
		key <I209> {[XF86AudioPause]};
		key <I210> {[XF86Launch3]};
		key <I211> {[XF86Launch4]};
		key <I212> {[XF86LaunchB]};
		key <I213> {[XF86Suspend]};
		key <I214> {[XF86Close]};
		key <I215> {[XF86AudioPlay]};
		key <I216> {[XF86AudioForward]};
		key <I218> {[Print]};
		key <I220> {[XF86WebCam]};
		key <I223> {[XF86Mail]};
		key <I224> {[XF86Messenger]};
		key <I226> {[XF86Go]};
		key <I227> {[XF86Finance]};
		key <I228> {[XF86Game]};
		key <I229> {[XF86Shop]};
		key <I231> {[Cancel]};
		key <I234> {[XF86AudioMedia]};
		key <I236> {[XF86KbdLightOnOff]};
		key <I237> {[XF86KbdBrightnessDown]};
		key <I238> {[XF86KbdBrightnessUp]};
		key <I239> {[XF86Send]};
		key <I240> {[XF86Reply]};
		key <I241> {[XF86MailForward]};
		key <I242> {[XF86Save]};
		key <I243> {[XF86Documents]};
		key <I244> {[XF86Battery]};
		key <I245> {[XF86Bluetooth]};
		key <I255> {[XF86Hibernate]};
		// }}}
		// }}}
	};
};
