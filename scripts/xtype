#!/usr/bin/env python3
import time
import argparse
KEYCODE = 255

def type(keysym, keycode=KEYCODE):
	import Xlib.X
	import Xlib.display
	display = Xlib.display.Display()
	display.change_keyboard_mapping(keycode, [(keysym,) * 8])
	display.sync()
	time.sleep(0.01)
	display.xtest_fake_input(Xlib.X.KeyPress, keycode)
	display.xtest_fake_input(Xlib.X.KeyRelease, keycode)
	display.sync()

def type_char(char, keycode=KEYCODE):
	keysym = char | 0x01000000
	if 0x80 <= char <= 0xFF:
		keysym = char
	if chr(char) in "\r\n\t\x1B":
		keysym = 0xFF00 | char
	type(keysym, keycode=keycode)

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description="Types a string using Xtest")
	parser.add_argument("string", help="The string to type")
	parser.add_argument("-s", "--keysym", action="store_true", help="Specify a keysym by name instead of chars")
	args = parser.parse_args()

	if args.keysym:
		import Xlib.keysymdef
		import Xlib.XK
		for group in Xlib.keysymdef.__all__:
			Xlib.XK.load_keysym_group(group)
		keysym = Xlib.XK.string_to_keysym(args.string)
		type(keysym)
	else:
		for char in map(ord, args.string):
			type_char(char)
